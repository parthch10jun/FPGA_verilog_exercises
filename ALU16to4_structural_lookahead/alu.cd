$date
	Fri Jan 08 18:14:17 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alutest $end
$var wire 1 ! Ze $end
$var wire 16 " Z [15:0] $end
$var wire 1 # Si $end
$var wire 1 $ Pa $end
$var wire 1 % Ovf $end
$var wire 1 & Ca $end
$var reg 16 ' X [15:0] $end
$var reg 16 ( Y [15:0] $end
$scope module DUT $end
$var wire 1 % Overflow $end
$var wire 16 ) X [15:0] $end
$var wire 16 * Y [15:0] $end
$var wire 1 ! Zero $end
$var wire 16 + Z [15:0] $end
$var wire 1 # Sign $end
$var wire 1 $ Parity $end
$var wire 1 & Carry $end
$scope module A0 $end
$var wire 4 , A [3:0] $end
$var wire 4 - B [3:0] $end
$var wire 1 . c1 $end
$var wire 1 / c2 $end
$var wire 1 0 c3 $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 1 3 g0 $end
$var wire 1 4 g1 $end
$var wire 1 5 g2 $end
$var wire 1 6 g3 $end
$var wire 1 7 p0 $end
$var wire 1 8 p1 $end
$var wire 1 9 p2 $end
$var wire 1 : p3 $end
$var wire 4 ; S [3:0] $end
$upscope $end
$scope module A1 $end
$var wire 4 < A [3:0] $end
$var wire 4 = B [3:0] $end
$var wire 1 > c1 $end
$var wire 1 ? c2 $end
$var wire 1 @ c3 $end
$var wire 1 2 cin $end
$var wire 1 A cout $end
$var wire 1 B g0 $end
$var wire 1 C g1 $end
$var wire 1 D g2 $end
$var wire 1 E g3 $end
$var wire 1 F p0 $end
$var wire 1 G p1 $end
$var wire 1 H p2 $end
$var wire 1 I p3 $end
$var wire 4 J S [3:0] $end
$upscope $end
$scope module A2 $end
$var wire 4 K A [3:0] $end
$var wire 4 L B [3:0] $end
$var wire 1 M c1 $end
$var wire 1 N c2 $end
$var wire 1 O c3 $end
$var wire 1 A cin $end
$var wire 1 P cout $end
$var wire 1 Q g0 $end
$var wire 1 R g1 $end
$var wire 1 S g2 $end
$var wire 1 T g3 $end
$var wire 1 U p0 $end
$var wire 1 V p1 $end
$var wire 1 W p2 $end
$var wire 1 X p3 $end
$var wire 4 Y S [3:0] $end
$upscope $end
$scope module A3 $end
$var wire 4 Z A [3:0] $end
$var wire 4 [ B [3:0] $end
$var wire 1 \ c1 $end
$var wire 1 ] c2 $end
$var wire 1 ^ c3 $end
$var wire 1 P cin $end
$var wire 1 & cout $end
$var wire 1 _ g0 $end
$var wire 1 ` g1 $end
$var wire 1 a g2 $end
$var wire 1 b g3 $end
$var wire 1 c p0 $end
$var wire 1 d p1 $end
$var wire 1 e p2 $end
$var wire 1 f p3 $end
$var wire 4 g S [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx g
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
bx [
bx Z
bx Y
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
bx L
bx K
bx J
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
bx =
bx <
bx ;
x:
x9
x8
x7
x6
x5
x4
x3
x2
01
x0
x/
x.
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
x&
x%
x$
x#
bx "
x!
$end
#5
0$
1%
0M
0N
0O
0P
b1111 Y
0>
0?
0@
0A
0#
b1111 J
0/
00
02
b0 g
0]
0^
1&
0\
0!
b111111111111 "
b111111111111 +
b1111 ;
0.
17
18
19
1:
03
04
05
06
1F
1G
1H
1I
0B
0C
0D
0E
1U
1V
1W
1X
0Q
0R
0S
0T
0c
0d
0e
0f
0_
0`
0a
1b
b0 -
b0 =
b0 L
b1000 [
b1111 ,
b1111 <
b1111 K
b1000 Z
b1000000000000000 (
b1000000000000000 *
b1000111111111111 '
b1000111111111111 )
#10
1!
1\
1]
1^
1M
1N
1O
1P
b0 Y
1>
1?
1@
1A
b0 J
10
12
1&
1/
0#
0%
b0 ;
0$
b0 "
b0 +
b0 g
08
14
1f
0b
07
1c
1d
1e
b10 -
b0 [
b1110 ,
b1111 Z
b10 (
b10 *
b1111111111111110 '
b1111111111111110 )
#15
1#
0\
0]
0^
0&
b1111 g
0M
0N
0O
0P
b1111 Y
0>
0?
0@
0A
b1111 J
00
02
0/
0$
0!
b1111111111111111 "
b1111111111111111 +
b1111 ;
17
18
04
b101 -
b101 =
b101 L
b101 [
b1010 ,
b1010 <
b1010 K
b1010 Z
b101010101010101 (
b101010101010101 *
b1010101010101010 '
b1010101010101010 )
#20
